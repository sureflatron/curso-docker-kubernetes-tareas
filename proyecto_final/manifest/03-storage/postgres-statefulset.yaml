apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: proyecto-integrador
  labels:
    app: postgres
    tier: database
    version: v2.0
spec:
  serviceName: postgres-headless
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        tier: database
        version: v2.0
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
          protocol: TCP

        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata

        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data

        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U curso -d apidb
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U curso -d apidb
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U curso -d apidb
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30

        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

        securityContext:
          runAsNonRoot: true
          runAsUser: 999  # postgres user in alpine image
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false

  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
      labels:
        app: postgres
        tier: database
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
