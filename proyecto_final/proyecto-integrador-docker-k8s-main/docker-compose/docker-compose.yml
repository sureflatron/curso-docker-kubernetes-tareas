services:
  app:
    build: ..
    container_name: springboot-api
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/apidb
      - SPRING_DATASOURCE_USERNAME=curso
      - SPRING_DATASOURCE_PASSWORD=docker123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    container_name: postgres-db-kb
    environment:
      - POSTGRES_DB=apidb
      - POSTGRES_USER=curso
      - POSTGRES_PASSWORD=docker123
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: angular-frontend
    environment:
      - API_BACKEND_URL=http://kong:8000
    ports:
      - "4200:80"
    depends_on:
      - kong
    networks:
      - app-network

  kong-db:
    image: postgres:15-alpine
    container_name: kong-postgres
    environment:
      - POSTGRES_DB=kong
      - POSTGRES_USER=kong
      - POSTGRES_PASSWORD=kongpass
    volumes:
      - kong-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-bootstrap:
    image: kong:3.4
    container_name: kong-bootstrap
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-db
      - KONG_PG_DATABASE=kong
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kongpass
    depends_on:
      kong-db:
        condition: service_healthy
    networks:
      - app-network
    command: kong migrations bootstrap
    restart: on-failure

  kong:
    image: kong:3.4
    container_name: kong-gateway
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-db
      - KONG_PG_DATABASE=kong
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kongpass
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_ADMIN_GUI_URL=http://localhost:8002
    depends_on:
      kong-bootstrap:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  redis-data:
  kong-data:

networks:
  app-network:
    driver: bridge
