services:
  gateway:
    image: nginx:alpine
    container_name: gateway
    ports:
      - "8080:8080"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - appnet

  backend:
    build: ./service1
    container_name: backend
    environment:
      - PORT=5000
      - MONGO_URL=mongodb://db:27017/postsdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', r=>{process.exit(r.statusCode===200?0:1)})"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    container_name: frontend
    networks:
      - appnet

  redis:
    image: redis:7-alpine
    container_name: redisF
    ports:
      - "6379:6379"
    networks:
      - appnet

  db:
    image: mongo:6
    container_name: db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  appnet:
    driver: bridge

volumes:
  mongo_data:
